//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace TMSDataService.DataAccessStrategy.Components
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TMSEntities object using the connection string found in the 'TMSEntities' section of the application configuration file.
        /// </summary>
        public TMSEntities() : base("name=TMSEntities", "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMSEntities object.
        /// </summary>
        public TMSEntities(string connectionString) : base(connectionString, "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMSEntities object.
        /// </summary>
        public TMSEntities(EntityConnection connection) : base(connection, "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblPriority> tblPriorities
        {
            get
            {
                if ((_tblPriorities == null))
                {
                    _tblPriorities = base.CreateObjectSet<tblPriority>("tblPriorities");
                }
                return _tblPriorities;
            }
        }
        private ObjectSet<tblPriority> _tblPriorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblStatu> tblStatus
        {
            get
            {
                if ((_tblStatus == null))
                {
                    _tblStatus = base.CreateObjectSet<tblStatu>("tblStatus");
                }
                return _tblStatus;
            }
        }
        private ObjectSet<tblStatu> _tblStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblTaskActivity> tblTaskActivities
        {
            get
            {
                if ((_tblTaskActivities == null))
                {
                    _tblTaskActivities = base.CreateObjectSet<tblTaskActivity>("tblTaskActivities");
                }
                return _tblTaskActivities;
            }
        }
        private ObjectSet<tblTaskActivity> _tblTaskActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblUser> tblUsers
        {
            get
            {
                if ((_tblUsers == null))
                {
                    _tblUsers = base.CreateObjectSet<tblUser>("tblUsers");
                }
                return _tblUsers;
            }
        }
        private ObjectSet<tblUser> _tblUsers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblPriorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblPriorities(tblPriority tblPriority)
        {
            base.AddObject("tblPriorities", tblPriority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblStatus(tblStatu tblStatu)
        {
            base.AddObject("tblStatus", tblStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblTaskActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblTaskActivities(tblTaskActivity tblTaskActivity)
        {
            base.AddObject("tblTaskActivities", tblTaskActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblUsers(tblUser tblUser)
        {
            base.AddObject("tblUsers", tblUser);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<tblPriority> GetPriority()
        {
            return base.ExecuteFunction<tblPriority>("GetPriority");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<tblPriority> GetPriority(MergeOption mergeOption)
        {
            return base.ExecuteFunction<tblPriority>("GetPriority", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<tblStatu> GetStatus()
        {
            return base.ExecuteFunction<tblStatu>("GetStatus");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<tblStatu> GetStatus(MergeOption mergeOption)
        {
            return base.ExecuteFunction<tblStatu>("GetStatus", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<tblUser> GetUser()
        {
            return base.ExecuteFunction<tblUser>("GetUser");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<tblUser> GetUser(MergeOption mergeOption)
        {
            return base.ExecuteFunction<tblUser>("GetUser", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<TaskList> GetTaskList()
        {
            return base.ExecuteFunction<TaskList>("GetTaskList");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMSTestModel", Name="tblPriority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblPriority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblPriority object.
        /// </summary>
        /// <param name="priorityID">Initial value of the PriorityID property.</param>
        /// <param name="priorityName">Initial value of the PriorityName property.</param>
        public static tblPriority CreatetblPriority(global::System.Int32 priorityID, global::System.String priorityName)
        {
            tblPriority tblPriority = new tblPriority();
            tblPriority.PriorityID = priorityID;
            tblPriority.PriorityName = priorityName;
            return tblPriority;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                if (_PriorityID != value)
                {
                    OnPriorityIDChanging(value);
                    ReportPropertyChanging("PriorityID");
                    _PriorityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriorityID");
                    OnPriorityIDChanged();
                }
            }
        }
        private global::System.Int32 _PriorityID;
        partial void OnPriorityIDChanging(global::System.Int32 value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriorityName
        {
            get
            {
                return _PriorityName;
            }
            set
            {
                if (_PriorityName != value)
                {
                    OnPriorityNameChanging(value);
                    ReportPropertyChanging("PriorityName");
                    _PriorityName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PriorityName");
                    OnPriorityNameChanged();
                }
            }
        }
        private global::System.String _PriorityName;
        partial void OnPriorityNameChanging(global::System.String value);
        partial void OnPriorityNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMSTestModel", Name="tblStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblStatu object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static tblStatu CreatetblStatu(global::System.Int32 statusID, global::System.String statusName)
        {
            tblStatu tblStatu = new tblStatu();
            tblStatu.StatusID = statusID;
            tblStatu.StatusName = statusName;
            return tblStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                if (_StatusName != value)
                {
                    OnStatusNameChanging(value);
                    ReportPropertyChanging("StatusName");
                    _StatusName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StatusName");
                    OnStatusNameChanged();
                }
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMSTestModel", Name="tblTaskActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblTaskActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblTaskActivity object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="taskName">Initial value of the TaskName property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="assignedTo">Initial value of the AssignedTo property.</param>
        /// <param name="taskCreatedOn">Initial value of the TaskCreatedOn property.</param>
        /// <param name="estimatedTime">Initial value of the EstimatedTime property.</param>
        public static tblTaskActivity CreatetblTaskActivity(global::System.Int32 taskID, global::System.String taskName, global::System.Int32 priority, global::System.Int32 status, global::System.Int32 assignedTo, global::System.DateTime taskCreatedOn, global::System.Int32 estimatedTime)
        {
            tblTaskActivity tblTaskActivity = new tblTaskActivity();
            tblTaskActivity.TaskID = taskID;
            tblTaskActivity.TaskName = taskName;
            tblTaskActivity.Priority = priority;
            tblTaskActivity.Status = status;
            tblTaskActivity.AssignedTo = assignedTo;
            tblTaskActivity.TaskCreatedOn = taskCreatedOn;
            tblTaskActivity.EstimatedTime = estimatedTime;
            return tblTaskActivity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskName
        {
            get
            {
                return _TaskName;
            }
            set
            {
                if (_TaskName != value)
                {
                    OnTaskNameChanging(value);
                    ReportPropertyChanging("TaskName");
                    _TaskName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TaskName");
                    OnTaskNameChanged();
                }
            }
        }
        private global::System.String _TaskName;
        partial void OnTaskNameChanging(global::System.String value);
        partial void OnTaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    OnPriorityChanging(value);
                    ReportPropertyChanging("Priority");
                    _Priority = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Priority");
                    OnPriorityChanged();
                }
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignedTo
        {
            get
            {
                return _AssignedTo;
            }
            set
            {
                if (_AssignedTo != value)
                {
                    OnAssignedToChanging(value);
                    ReportPropertyChanging("AssignedTo");
                    _AssignedTo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedTo");
                    OnAssignedToChanged();
                }
            }
        }
        private global::System.Int32 _AssignedTo;
        partial void OnAssignedToChanging(global::System.Int32 value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TaskCreatedOn
        {
            get
            {
                return _TaskCreatedOn;
            }
            set
            {
                if (_TaskCreatedOn != value)
                {
                    OnTaskCreatedOnChanging(value);
                    ReportPropertyChanging("TaskCreatedOn");
                    _TaskCreatedOn = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskCreatedOn");
                    OnTaskCreatedOnChanged();
                }
            }
        }
        private global::System.DateTime _TaskCreatedOn;
        partial void OnTaskCreatedOnChanging(global::System.DateTime value);
        partial void OnTaskCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedTime
        {
            get
            {
                return _EstimatedTime;
            }
            set
            {
                if (_EstimatedTime != value)
                {
                    OnEstimatedTimeChanging(value);
                    ReportPropertyChanging("EstimatedTime");
                    _EstimatedTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EstimatedTime");
                    OnEstimatedTimeChanged();
                }
            }
        }
        private global::System.Int32 _EstimatedTime;
        partial void OnEstimatedTimeChanging(global::System.Int32 value);
        partial void OnEstimatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualTime
        {
            get
            {
                return _ActualTime;
            }
            set
            {
                OnActualTimeChanging(value);
                ReportPropertyChanging("ActualTime");
                _ActualTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTime");
                OnActualTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualTime;
        partial void OnActualTimeChanging(Nullable<global::System.Int32> value);
        partial void OnActualTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMSTestModel", Name="tblUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblUser object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static tblUser CreatetblUser(global::System.Int32 userID, global::System.String userName)
        {
            tblUser tblUser = new tblUser();
            tblUser.UserID = userID;
            tblUser.UserName = userName;
            return tblUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TMSTestModel", Name="TaskList")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TaskList : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskList object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="taskName">Initial value of the TaskName property.</param>
        /// <param name="priorityID">Initial value of the PriorityID property.</param>
        /// <param name="priorityName">Initial value of the PriorityName property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="taskCreatedOn">Initial value of the TaskCreatedOn property.</param>
        /// <param name="estimatedTime">Initial value of the EstimatedTime property.</param>
        public static TaskList CreateTaskList(global::System.Int32 taskId, global::System.String taskName, global::System.Int32 priorityID, global::System.String priorityName, global::System.Int32 statusID, global::System.String statusName, global::System.Int32 userID, global::System.String userName, global::System.DateTime taskCreatedOn, global::System.Int32 estimatedTime)
        {
            TaskList taskList = new TaskList();
            taskList.TaskId = taskId;
            taskList.TaskName = taskName;
            taskList.PriorityID = priorityID;
            taskList.PriorityName = priorityName;
            taskList.StatusID = statusID;
            taskList.StatusName = statusName;
            taskList.UserID = userID;
            taskList.UserName = userName;
            taskList.TaskCreatedOn = taskCreatedOn;
            taskList.EstimatedTime = estimatedTime;
            return taskList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskName
        {
            get
            {
                return _TaskName;
            }
            set
            {
                OnTaskNameChanging(value);
                ReportPropertyChanging("TaskName");
                _TaskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskName");
                OnTaskNameChanged();
            }
        }
        private global::System.String _TaskName;
        partial void OnTaskNameChanging(global::System.String value);
        partial void OnTaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private global::System.Int32 _PriorityID;
        partial void OnPriorityIDChanging(global::System.Int32 value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriorityName
        {
            get
            {
                return _PriorityName;
            }
            set
            {
                OnPriorityNameChanging(value);
                ReportPropertyChanging("PriorityName");
                _PriorityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PriorityName");
                OnPriorityNameChanged();
            }
        }
        private global::System.String _PriorityName;
        partial void OnPriorityNameChanging(global::System.String value);
        partial void OnPriorityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TaskCreatedOn
        {
            get
            {
                return _TaskCreatedOn;
            }
            set
            {
                OnTaskCreatedOnChanging(value);
                ReportPropertyChanging("TaskCreatedOn");
                _TaskCreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskCreatedOn");
                OnTaskCreatedOnChanged();
            }
        }
        private global::System.DateTime _TaskCreatedOn;
        partial void OnTaskCreatedOnChanging(global::System.DateTime value);
        partial void OnTaskCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedTime
        {
            get
            {
                return _EstimatedTime;
            }
            set
            {
                OnEstimatedTimeChanging(value);
                ReportPropertyChanging("EstimatedTime");
                _EstimatedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedTime");
                OnEstimatedTimeChanged();
            }
        }
        private global::System.Int32 _EstimatedTime;
        partial void OnEstimatedTimeChanging(global::System.Int32 value);
        partial void OnEstimatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualTime
        {
            get
            {
                return _ActualTime;
            }
            set
            {
                OnActualTimeChanging(value);
                ReportPropertyChanging("ActualTime");
                _ActualTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTime");
                OnActualTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualTime;
        partial void OnActualTimeChanging(Nullable<global::System.Int32> value);
        partial void OnActualTimeChanged();

        #endregion
    }

    #endregion
    
}
