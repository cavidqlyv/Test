/*

====================================================================================================

This file as been imported by the Commander console and the 'Import files' script.

The source of the import is:
C:\Projects\SoftwareMonkeys\SiteStarter\Src\App\SoftwareMonkeys.SiteStarter.Data.Db4o.Tests\MockDb4oDataProviderInitializer.cs

Do not edit this file or changes may be lost. Edit the source file and the changes will be imported by all projects that use it.

====================================================================================================


*/

using System;
using System.Configuration;
using System.Configuration.Provider;
using SoftwareMonkeys.WorkHub.Data;
using SoftwareMonkeys.WorkHub.Data.Db4o;
using SoftwareMonkeys.WorkHub.Diagnostics;
using System.IO;
using SoftwareMonkeys.WorkHub.Tests;

namespace SoftwareMonkeys.WorkHub.Data.Tests
{
	public class MockDb4oDataProviderInitializer : IDataProviderInitializer
	{
		BaseTestFixture ExecutingTestFixture;
		
		public MockDb4oDataProviderInitializer(BaseTestFixture executingTestFixture)
		{
			ExecutingTestFixture = executingTestFixture;
		}

		public DataProvider Initialize()
		{
			Db4oDataProvider provider = new Db4oDataProvider();
			using (LogGroup logGroup = LogGroup.Start("Initializing data provider", NLog.LogLevel.Info))
			{
				provider.Initialize("Db4oDataProvider", null);
				
				DataAccess.Data = provider;
				
				// The versions and directories are set here by default but can be changed by each test to suit the situation.
				provider.Schema.LegacyVersion = new Version(0, 9, 0, 0);
				provider.Schema.ApplicationVersion = new Version(1, 0, 0, 0);
				
				provider.Exporter.ExportDirectoryPath = TestUtilities.GetTestingPath(ExecutingTestFixture) + Path.DirectorySeparatorChar + "Exported";
				provider.Importer.ImportableDirectoryPath = TestUtilities.GetTestingPath(ExecutingTestFixture) + Path.DirectorySeparatorChar + "Exported";
				provider.Importer.ImportedDirectoryPath = TestUtilities.GetTestingPath(ExecutingTestFixture) + Path.DirectorySeparatorChar + "Imported";
			}
			return provider;
		}
	}
}
