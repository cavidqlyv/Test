<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Asc" xml:space="preserve">
    <value>(asc)</value>
  </data>
  <data name="CreateIdea" xml:space="preserve">
    <value>Create Idea</value>
  </data>
  <data name="CreateIdeaIntro" xml:space="preserve">
    <value>Enter the new idea details in the form below.</value>
  </data>
  <data name="Desc" xml:space="preserve">
    <value>(desc)</value>
  </data>
  <data name="EditIdea" xml:space="preserve">
    <value>Edit Idea</value>
  </data>
  <data name="EditIdeaIntro" xml:space="preserve">
    <value>Edit the idea details in the form below.</value>
  </data>
  <data name="NA" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="NewIdeaDetails" xml:space="preserve">
    <value>New Idea Details</value>
  </data>
  <data name="IdeaDetails" xml:space="preserve">
    <value>Idea Details</value>
  </data>
  <data name="IdeaTitleTaken" xml:space="preserve">
    <value>The title of the idea is in use, please try a different one.</value>
  </data>
  <data name="IdeaSaved" xml:space="preserve">
    <value>The idea was saved successfully.</value>
  </data>
  <data name="IdeaUpdated" xml:space="preserve">
    <value>The idea was updated successfully.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="ConfirmCancelCreateIdea" xml:space="preserve">
    <value>Are you sure you want to cancel creating this idea?</value>
  </data>
  <data name="IdeasXmlPages" xml:space="preserve">
    <value>Ideas XML Pages</value>
  </data>
  <data name="Ideas" xml:space="preserve">
    <value>Ideas</value>
  </data>
  <data name="EditIdeaToolTip" xml:space="preserve">
    <value>Edit this idea</value>
  </data>
  <data name="ManageIdeas" xml:space="preserve">
    <value>Manage Ideas</value>
  </data>
  <data name="ManageIdeasIntro" xml:space="preserve">
    <value>Create and manage ideas in the index below.</value>
  </data>
  <data name="NoIdeas" xml:space="preserve">
    <value>No ideas found.</value>
  </data>
  <data name="Idea" xml:space="preserve">
    <value>Idea</value>
  </data>
  <data name="IdeaDeleted" xml:space="preserve">
    <value>The selected idea was deleted successfully.</value>
  </data>
  <data name="AllIdeas" xml:space="preserve">
    <value>All Ideas</value>
  </data>
  <data name="IdeasXml" xml:space="preserve">
    <value>Ideas XML</value>
  </data>
  <data name="IdeasXmlIntro" xml:space="preserve">
    <value>The ideas below display ideas in XML format.</value>
  </data>
  <data name="ConfirmDeleteIdea" xml:space="preserve">
    <value>Are you sure you wish to delete this idea?</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteIdeaToolTip" xml:space="preserve">
    <value>Delete this idea</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Xml" xml:space="preserve">
    <value>XML</value>
  </data>
  <data name="NoSummary" xml:space="preserve">
    <value>No summary has been provided for this idea.</value>
  </data>
  <data name="IdeaSummary" xml:space="preserve">
    <value>Idea Summary</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="SelectProject" xml:space="preserve">
    <value>Select Project</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="IdeaUrlRequired" xml:space="preserve">
    <value>Please enter a URL for the idea.</value>
  </data>
  <data name="IdeaProjectRequired" xml:space="preserve">
    <value>Please select at least one project that this idea is assigned to.</value>
  </data>
  <data name="SelectIdea" xml:space="preserve">
    <value>Select Idea</value>
  </data>
  <data name="SubIdeas" xml:space="preserve">
    <value>Sub Ideas</value>
  </data>
  <data name="ParentIdeas" xml:space="preserve">
    <value>Parent Ideas</value>
  </data>
  <data name="RelatedIdeas" xml:space="preserve">
    <value>Related Ideas</value>
  </data>
  <data name="NoSubIdeasForIdea" xml:space="preserve">
    <value>No sub ideas assigned to this idea.</value>
  </data>
  <data name="NoParentIdeasForIdea" xml:space="preserve">
    <value>No parent ideas assigned to this idea.</value>
  </data>
  <data name="NoRelatedIdeasForIdea" xml:space="preserve">
    <value>No related ideas assigned to this idea.</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="IdeaDetailsRequired" xml:space="preserve">
    <value>Please enter the details of the idea.</value>
  </data>
  <data name="Planning" xml:space="preserve">
    <value>Planning</value>
  </data>
  <data name="NoProjectsForIdea" xml:space="preserve">
    <value>This idea has not been associated with any projects.</value>
  </data>
  <data name="Brainstorm" xml:space="preserve">
    <value>Brainstorm</value>
  </data>
  <data name="VotesBalance" xml:space="preserve">
    <value>Votes Balance</value>
  </data>
  <data name="Guide" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="TotalVotes" xml:space="preserve">
    <value>Total Votes</value>
  </data>
  <data name="Needed" xml:space="preserve">
    <value>Needed</value>
  </data>
  <data name="Achieved" xml:space="preserve">
    <value>Achieved</value>
  </data>
  <data name="DemandVotesBalance" xml:space="preserve">
    <value>'Demand' Votes Balance</value>
  </data>
  <data name="AchievedVotesBalance" xml:space="preserve">
    <value>'Achieved' Votes Balance</value>
  </data>
  <data name="TotalDemandVotes" xml:space="preserve">
    <value>Total 'Demand' Votes</value>
  </data>
  <data name="TotalAchievedVotes" xml:space="preserve">
    <value>Total 'Achieved' Votes</value>
  </data>
  <data name="IsPublic" xml:space="preserve">
    <value>Is Public</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>more info</value>
  </data>
</root>